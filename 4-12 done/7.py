import random

a = []
for i in range(0, 10):
    a.append(random.randint(-100, 100))
print('Исходная последовательность:', *a)


def sort(array):
    inc = len(array) // 2
    while inc:
        for i, el in enumerate(array):
            while i >= inc and array[i - inc] > el:
                array[i] = array[i - inc]
                i -= inc
            array[i] = el
        inc = 1 if inc == 2 else int(inc * 5.0 / 11)

    return array

sort(a)
print('Отсортированная последовательнсть:', *a)

# Сортируем вставкой подгруппы элементов, но только 
# в подгруппе они идут не в ряд, а равномерно выбираются
# с некоторой дельтой по индексу. После первоначальных 
# грубых проходов, дельта методично уменьшается, 
# пока расстояние между элементами этих несвязных подмножеств 
# не достигнет единицы. Благодаря первоначальным проходам с 
# большим шагом, большинство малых по значению элементов 
# перебрасываются в левую часть массива, 
# большинство крупных элементов массива попадают в правую.

# Как известно, вставочный метод очень эффективно обрабатывает 
# почти отсортированные массивы. Сортировка Шелла при первоначальных 
# проходах достаточно быстро и доводит массив к состоянию неполной 
# упорядоченности. На заключительном этапе шаг равен единице, т.е. "Шелл" 
# естественным образом трансформируется в сортировку простыми вставками.